{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/currency-converter.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CurrencyConverterComponent {\n  constructor(currencyConverterService) {\n    this.currencyConverterService = currencyConverterService;\n    this.amount = 0;\n    this.result = '';\n  }\n  convertCurrency() {\n    this.currencyConverterService.convertCurrency(this.amount).subscribe(result => {\n      console.log(result); // Added for debugging\n      this.result = result.currencyText;\n    }, error => console.error(error));\n  }\n}\nCurrencyConverterComponent.ɵfac = function CurrencyConverterComponent_Factory(t) {\n  return new (t || CurrencyConverterComponent)(i0.ɵɵdirectiveInject(i1.CurrencyConverterService));\n};\nCurrencyConverterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CurrencyConverterComponent,\n  selectors: [[\"app-currency-converter\"]],\n  decls: 10,\n  vars: 2,\n  consts: [[1, \"card\", \"bg-light\", 2, \"width\", \"24rem\"], [1, \"card-body\"], [\"type\", \"text\", \"pattern\", \"^\\\\d{1,3}( \\\\d{3})*,?\\\\d{0,2}$\", \"placeholder\", \"Enter amount\", 1, \"form-control\", \"mb-3\", \"mr-3\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\"], [1, \"result\", \"text-wrap\", \"bg-white\", \"p-3\", 2, \"overflow-wrap\", \"break-word\"]],\n  template: function CurrencyConverterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\");\n      i0.ɵɵtext(3, \"currency-converter works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CurrencyConverterComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.amount = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function CurrencyConverterComponent_Template_button_click_6_listener() {\n        return ctx.convertCurrency();\n      });\n      i0.ɵɵtext(7, \"Convert\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"p\", 4);\n      i0.ɵɵtext(9);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.amount);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.result);\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.PatternValidator, i2.NgModel],\n  styles: [\".result[_ngcontent-%COMP%] {\\r\\n  height: 150px;\\r\\n  overflow-y: auto;\\r\\n  border-radius: 5px; \\r\\n  box-shadow: 0 0 10px rgba(0,0,0,0.15); \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3VycmVuY3ktY29udmVydGVyL2N1cnJlbmN5LWNvbnZlcnRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBRSxvQkFBb0I7RUFDeEMscUNBQXFDLEVBQUUsa0JBQWtCO0FBQzNEIiwic291cmNlc0NvbnRlbnQiOlsiLnJlc3VsdCB7XHJcbiAgaGVpZ2h0OiAxNTBweDtcclxuICBvdmVyZmxvdy15OiBhdXRvO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDsgLyogUm91bmRlZCBjb3JuZXJzICovXHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLDAsMCwwLjE1KTsgLyogU3VidGxlIHNoYWRvdyAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,0BAA0B;EAIrCC,YAAoBC,wBAAkD;IAAlD,6BAAwB,GAAxBA,wBAAwB;IAH5C,WAAM,GAAW,CAAC;IAClB,WAAM,GAAG,EAAE;EAE+D;EAE1EC,eAAe;IACb,IAAI,CAACD,wBAAwB,CAACC,eAAe,CAAC,IAAI,CAACC,MAAM,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MAC5EC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC;MACrB,IAAI,CAACA,MAAM,GAAGA,MAAM,CAACG,YAAY;IACnC,CAAC,EAAEC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAXWV,0BAA0B;mBAA1BA,0BAA0B;AAAA;AAA1BA,0BAA0B;QAA1BA,0BAA0B;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRvCC,8BAAiD;MAG1CA,yCAAyB;MAAAA,iBAAI;MAChCA,2BAAK;MACgBA;QAAA;MAAA,EAAoB;MAAvCA,iBAAwI;MACxIA,iCAAiE;MAAzDA;QAAA,OAASC,qBAAiB;MAAA,EAAC;MAA8BD,uBAAO;MAAAA,iBAAS;MACjFA,4BAA4E;MAAAA,YAAU;MAAAA,iBAAI;;;MAFvEA,eAAoB;MAApBA,oCAAoB;MAEqCA,eAAU;MAAVA,gCAAU","names":["CurrencyConverterComponent","constructor","currencyConverterService","convertCurrency","amount","subscribe","result","console","log","currencyText","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\arthu\\source\\repos\\arthurettiazure\\Converter\\Converter\\ClientApp\\src\\app\\currency-converter\\currency-converter.component.ts","C:\\Users\\arthu\\source\\repos\\arthurettiazure\\Converter\\Converter\\ClientApp\\src\\app\\currency-converter\\currency-converter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CurrencyConverterService } from '../../services/currency-converter.service';\r\n\r\n@Component({\r\n  selector: 'app-currency-converter',\r\n  templateUrl: './currency-converter.component.html',\r\n  styleUrls: ['./currency-converter.component.css']\r\n})\r\nexport class CurrencyConverterComponent {\r\n  amount: Number = 0;\r\n  result = '';\r\n\r\n  constructor(private currencyConverterService: CurrencyConverterService) { }\r\n\r\n  convertCurrency() {\r\n    this.currencyConverterService.convertCurrency(this.amount).subscribe(result => {\r\n      console.log(result); // Added for debugging\r\n      this.result = result.currencyText;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n","<div class=\"card bg-light\" style=\"width: 24rem;\">\r\n  <!-- Add bg-light for a light background -->\r\n  <div class=\"card-body\">\r\n    <p>currency-converter works!</p>\r\n    <div>\r\n      <input type=\"text\" [(ngModel)]=\"amount\" pattern=\"^\\d{1,3}( \\d{3})*,?\\d{0,2}$\" placeholder=\"Enter amount\" class=\"form-control mb-3 mr-3\"> <!-- Add form-control for styled input -->\r\n      <button (click)=\"convertCurrency()\" class=\"btn btn-primary mb-3\">Convert</button> <!-- Add btn and btn-primary for a styled button -->\r\n      <p class=\"result text-wrap bg-white p-3\" style=\"overflow-wrap: break-word;\">{{result}}</p> <!-- Add bg-white and p-3 for a white background and padding -->\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}